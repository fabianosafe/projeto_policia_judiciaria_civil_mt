/* 1) Construa um script SQL (projeto físico) para criar e popular um banco de dados que deverá ser nominado de conveniencia; */

//acesse o pgadmin pelo browser http://localhost:15432/
//clique em "Add new server" e coloque os campos abaixo
//general > name : srvpostgres
//conection > host name/address : container-postgres
//conection > port : 5432
//conection > Maintenance database : postgres
//conection > Username : postgres
//conection > Password : 1234
//salvar

//com o server criado vá em Object > Create > Database
//database : dbPolicia
//salvar

//com o database criado vá em Tools > Query Tool
//clique em postgres/postgres@srvpostgres
//selecione New Connection
//muda o Database para dbPolicia
//clique ok
//vai aparecer By changing the connection you will lose all your unsaved data for the current connection. Do you want to continue?
//clique yes
//feito isso ficará dbPolicia/postgres@srvpostgres
//cole todo o texto abaixo e execute(f5), vai aparecer a msg : Query returned successfully in xxxx msec.

CREATE SCHEMA conveniencia AUTHORIZATION postgres;

CREATE TABLE conveniencia.estado (
  codigo BIGINT      NOT NULL,
  nome   VARCHAR(50) NOT NULL,
  sigla  VARCHAR(2)  NOT NULL,
  CONSTRAINT pk_estado PRIMARY KEY (codigo));

CREATE TABLE conveniencia.cidade (
  codigo        BIGINT      NOT NULL,
  nome          VARCHAR(50) NOT NULL,
  codigo_estado BIGINT      NOT NULL,
  CONSTRAINT pk_cidade PRIMARY KEY (codigo),
  CONSTRAINT cidade_fk_estado FOREIGN KEY (codigo_estado) REFERENCES conveniencia.estado (codigo) ON DELETE RESTRICT ON UPDATE CASCADE);

CREATE TABLE conveniencia.cliente (
  codigo        BIGINT      NOT NULL ,
  nome          VARCHAR(80) NOT NULL,
  tipo_pessoa   VARCHAR(15) NOT NULL,
  cpf_cnpj      VARCHAR(30) NOT NULL,
  telefone      VARCHAR(20) ,
  email         VARCHAR(50) NOT NULL,
  logradouro    VARCHAR(50) ,
  numero        VARCHAR(15) ,
  complemento   VARCHAR(20) ,
  cep           VARCHAR(15) ,
  codigo_cidade BIGINT      ,
  CONSTRAINT pk_cliente PRIMARY KEY (codigo),
  CONSTRAINT cliente_fk_cidade FOREIGN KEY (codigo_cidade) REFERENCES conveniencia.cidade (codigo) ON DELETE RESTRICT ON UPDATE CASCADE);

CREATE TABLE conveniencia.usuario (
  codigo         INTEGER      NOT NULL ,
  nome           VARCHAR(50)  NOT NULL,
  email          VARCHAR(50)  NOT NULL,
  senha          VARCHAR(120) NOT NULL,
  ativo          SMALLINT     NOT NULL,
  datanascimento DATE         ,
  CONSTRAINT pk_usuario PRIMARY KEY (codigo),
  CONSTRAINT usuario_nome_key UNIQUE(nome));

CREATE TABLE conveniencia.estilo (
  codigo BIGINT      NOT NULL,
  nome   VARCHAR(50) NOT NULL,
  CONSTRAINT pk_estilo PRIMARY KEY (codigo));

CREATE TABLE conveniencia.cerveja (
  codigo             BIGINT        NOT NULL ,
  sku                VARCHAR(50)   NOT NULL,
  nome               VARCHAR(80)   NOT NULL,
  descricao          TEXT          NOT NULL,
  valor              DECIMAL(10,2) NOT NULL,
  teor_alcoolico     DECIMAL(10,2) NOT NULL,
  comissao           DECIMAL(10,2) NOT NULL,
  sabor              VARCHAR(50)   NOT NULL,
  origem             VARCHAR(50)   NOT NULL,
  quantidade_estoque INTEGER,
  foto               BYTEA,
  content_type       VARCHAR(100),
  codigo_estilo      BIGINT        NOT NULL,
  CONSTRAINT pk_cerveja PRIMARY KEY (codigo),
  CONSTRAINT cerveja_fk_estilo FOREIGN KEY (codigo_estilo) REFERENCES conveniencia.estilo (codigo) ON DELETE RESTRICT ON UPDATE CASCADE);

CREATE TABLE conveniencia.venda (
  codigo            BIGINT        NOT NULL ,
  data_criacao      TIMESTAMP(0)  WITHOUT TIME ZONE DEFAULT now() NOT NULL,
  valor_frete       DECIMAL(10,2) ,
  valor_desconto    DECIMAL(10,2) ,
  valor_total       DECIMAL(10,2) NOT NULL,
  status            VARCHAR(30)   NOT NULL,
  observacao        VARCHAR(30)   ,
  data_hora_entrega TIMESTAMP(0)  WITHOUT TIME ZONE,
  codigo_cliente    BIGINT        NOT NULL,
  codigo_usuario    BIGINT        NOT NULL,
  CONSTRAINT pk_venda PRIMARY KEY (codigo),
  CONSTRAINT venda_fk_cliente FOREIGN KEY (codigo_cliente) REFERENCES conveniencia.cliente (codigo) ON DELETE RESTRICT ON UPDATE CASCADE,
  CONSTRAINT venda_fk_usuario FOREIGN KEY (codigo_usuario) REFERENCES conveniencia.usuario (codigo) ON DELETE RESTRICT ON UPDATE CASCADE);

CREATE TABLE conveniencia.item_venda (
  codigo         BIGINT        NOT NULL ,
  quantidade     INTEGER       NOT NULL,
  valor_unitario DECIMAL(10,2) NOT NULL,
  codigo_cerveja BIGINT        NOT NULL,
  codigo_venda   BIGINT        NOT NULL,
  CONSTRAINT pk_item_venda PRIMARY KEY (codigo),
  CONSTRAINT item_venda_fk_cerveja FOREIGN KEY (codigo_cerveja) REFERENCES conveniencia.cerveja(codigo) ON DELETE RESTRICT ON UPDATE CASCADE,
  CONSTRAINT item_venda_fk_venda FOREIGN KEY (codigo_venda) REFERENCES conveniencia.venda (codigo) ON DELETE RESTRICT ON UPDATE CASCADE);

CREATE TABLE conveniencia.grupo (
  codigo BIGINT      NOT NULL,
  nome   VARCHAR(50) NOT NULL,
  CONSTRAINT pk_grupo PRIMARY KEY (codigo));

CREATE TABLE conveniencia.usuario_grupo (
  codigo_usuario BIGINT NOT NULL,
  codigo_grupo   BIGINT NOT NULL,
  CONSTRAINT pk_usuario_grupo PRIMARY KEY (codigo_usuario, codigo_grupo),
  CONSTRAINT usuario_grupo_fk_usuario FOREIGN KEY (codigo_usuario) REFERENCES conveniencia.usuario (codigo) ON DELETE RESTRICT ON UPDATE CASCADE,
  CONSTRAINT usuario_grupo_fk_grupo   FOREIGN KEY (codigo_grupo)   REFERENCES conveniencia.grupo   (codigo) ON DELETE RESTRICT ON UPDATE CASCADE);

CREATE TABLE conveniencia.permissao (
  codigo BIGINT      NOT NULL ,
  nome   VARCHAR(50) NOT NULL,
  CONSTRAINT pk_permissao PRIMARY KEY (codigo));

CREATE TABLE conveniencia.grupo_permissao (
  codigo_grupo     BIGINT NOT NULL,
  codigo_permissao BIGINT NOT NULL,
  CONSTRAINT pk_grupo_permissao PRIMARY KEY (codigo_grupo, codigo_permissao),
  CONSTRAINT permissao_grupo_fk_permissao FOREIGN KEY (codigo_permissao) REFERENCES conveniencia.permissao (codigo) ON DELETE RESTRICT ON UPDATE CASCADE,
  CONSTRAINT permissao_grupo_fk_grupo     FOREIGN KEY (codigo_grupo)     REFERENCES conveniencia.grupo     (codigo) ON DELETE RESTRICT ON UPDATE CASCADE);

