//atualizando pacotes
sudo apt upgrade
sudo apt update
sudo apt install apt-transport-https ca-certificates curl software-properties-common

//chave GPG > repositório Docker 
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -

//repositório do Docker às fontes do APT
sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu focal stable"

//atualizando pacotes novamente
sudo apt update

//verificando se instalacao apontara para repositorio docker
apt-cache policy docker-ce

//instalando docker
sudo apt install docker-ce

//verificando se instalado. Precise retornar "Active: active (running)" 
sudo systemctl status docker

//baixando a imagem do postgres12 e pgadmin4
sudo docker pull postgres:12
sudo docker pull dpage/pgadmin4

//verificando as imagens
sudo docker images

//resultado
//REPOSITORY       TAG       IMAGE ID       CREATED      SIZE
//dpage/pgadmin4   latest    7db8147d0c7b   6 days ago   278MB
//postgres         12        898ffae1aafe   9 days ago   314MB

//criando uma rede no docker chamada postgres-network que sera utilizadas pelos containers
sudo docker network create --driver bridge postgres-network

//verificando as redes do docker
sudo docker network ls

//resultado
//e842cbb7bbae   postgres-network   bridge    local

//criando um container para uma instância do PostgreSQL12
//name    : nome para o container que sera criado
//network : rede que criamos logo acima
//-p      : porta (padrao postgres 5432)
//-v      : Volume (local dos dados do container)  
//-d      : determina rodar como servico em background e o nome da imagem baixada
sudo docker run --name container-postgres --network=postgres-network -e "POSTGRES_PASSWORD=1234" -p 5432:5432 -v /home/fabiano/PostgreSQL:/var/lib/postgresql/data -d postgres:12

//criando um container para uma instância do pgAdmin4
//name    : nome para o container que sera criado
//network : rede que criamos logo acima
//-p      : especifica a porta (15432) de comunicação com o pgAdmin4, a qual será mapeada para a porta default (80) desta aplicação Web;
//PGADMIN_DEFAULT_EMAIL : e-mail de acesso;
//PGADMIN_DEFAULT_PASSWORD :senha de acesso;
//-d      : determina rodar como servico em background e o nome da imagem baixada
sudo docker run --name container-pgadmin --network=postgres-network -p 15432:80 -e "PGADMIN_DEFAULT_EMAIL=fabianosafe@gmail.com" -e "PGADMIN_DEFAULT_PASSWORD=1234" -d dpage/pgadmin4

//verificando se containers estao rodando
sudo docker ps

//resultado
//CONTAINER ID   IMAGE            COMMAND                  CREATED          STATUS          PORTS                            NAMES
//976067ccc2cc   dpage/pgadmin4   "/entrypoint.sh"         13 minutes ago   Up 13 minutes   443/tcp, 0.0.0.0:15432->80/tcp   container-pgadmin
//9372d15f74ba   postgres:12      "docker-entrypoint.s…"   14 minutes ago   Up 14 minutes   0.0.0.0:5432->5432/tcp           container-postgres

//caso precise rodar os containers parado
//liste os containers disponiveis e parados
sudo docker ps -a

//resultado
//CONTAINER ID   IMAGE            COMMAND                  CREATED      STATUS                  PORTS     NAMES
//976067ccc2cc   dpage/pgadmin4   "/entrypoint.sh"         4 days ago   Exited (0) 3 days ago             container-pgadmin
//9372d15f74ba   postgres:12      "docker-entrypoint.s…"   4 days ago   Exited (0) 3 days ago             container-postgres

//iniciando o serviço dos containers
sudo docker start 976067ccc2cc
sudo docker start 9372d15f74ba

//depois de criado os containers, acessamos o pgadmin no browser pelo endereco
//http://localhost:15432/


//Execute este comando para baixar a versão estável atual do Docker Compose
sudo curl -L "https://github.com/docker/compose/releases/download/1.28.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose

//Aplique permissões executáveis ao binário
sudo chmod +x /usr/local/bin/docker-compose

//verifique se esta instalado
docker-compose --version

//baixando a imagem do minio server
sudo docker pull minio/minio
sudo docker run --name container-minio -p 9000:9000 --restart always minio/minio server /data

//acessar pelo browser http://127.0.0.1:9000/minio/
//usuario minioadmin
//senha minioadmin

//utilizei a ferramenta https://www.portainer.io/ para gerenciar os conteiners pelo browser
//baixando a imagem no docker
sudo docker pull portainer/portainer

//criando o conteiner e estipulando a porta 8888 para o acesso
sudo docker run --name container-portainer -p 8888:9000 --restart always -v /var/run/docker.sock:/var/run/docker.sock -v /home/fabiano/Portainer/data:/data portainer/portainer

//para acessar o portainer, no browser 
//http://localhost:8888
